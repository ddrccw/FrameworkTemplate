language: objective-c
osx_image: xcode9.2
branches:
  only:
  - master
  - develop
  - /^v\d+\.\d+(\.\d+)?(-\S*)?$/
cache:
  directories:
    - Carthage
    - vendor/bundle

before_install:
  - bundle install --path vendor/bundle
  - brew update
  - brew outdated carthage || brew upgrade carthage

env:
  global:
  - LC_CTYPE=en_US.UTF-8
  - LANG=en_US.UTF-8
  - WORKSPACE={{ cookiecutter.name }}.xcworkspace
  - IOS_FRAMEWORK_SCHEME="{{ cookiecutter.name }}-iOS"
  matrix:
    - DESTINATION="OS=11.2,name=iPhone X"                   SCHEME="$IOS_FRAMEWORK_SCHEME"     RUN_TESTS="YES"
    - DESTINATION="OS=10.3.1,name=iPhone 7 Plus"            SCHEME="$IOS_FRAMEWORK_SCHEME"     RUN_TESTS="YES"
    - DESTINATION="OS=9.0,name=iPhone 6"                    SCHEME="$IOS_FRAMEWORK_SCHEME"     RUN_TESTS="YES"
    - DESTINATION="OS=8.1,name=iPhone 5s"                   SCHEME="$IOS_FRAMEWORK_SCHEME"     RUN_TESTS="YES"
    
before_script:
  - sh scripts/bootstrap

script:
  - set -o pipefail
  - xcodebuild -version
  - xcodebuild -showsdks

  # Build Framework in Debug and Run Tests if specified
  - if [ $RUN_TESTS == "YES" ]; then
      xcodebuild -workspace "$WORKSPACE" -scheme "$SCHEME" -destination "$DESTINATION" -configuration Debug ONLY_ACTIVE_ARCH=NO ENABLE_TESTABILITY=YES test | xcpretty -c;
    else
      xcodebuild -workspace "$WORKSPACE" -scheme "$SCHEME" -destination "$DESTINATION" -configuration Debug ONLY_ACTIVE_ARCH=NO build | xcpretty -c;
    fi

  # Build Framework in Release and Run Tests if specified
  - if [ $RUN_TESTS == "YES" ]; then
      xcodebuild -workspace "$WORKSPACE" -scheme "$SCHEME" -destination "$DESTINATION" -configuration Release ONLY_ACTIVE_ARCH=NO ENABLE_TESTABILITY=YES test | xcpretty -c;
    else
      xcodebuild -workspace "$WORKSPACE" -scheme "$SCHEME" -destination "$DESTINATION" -configuration Release ONLY_ACTIVE_ARCH=NO build | xcpretty -c;
    fi

jobs:
  include:
    - stage: Danger
      script: bundle exec danger
    - stage: Pod lib lint
      script: bundle exec pod lib lint --verbose --allow-warnings
    - stage: Deploy
      script: skip
      before_deploy: carthage build --no-skip-current && carthage archive {{ cookiecutter.name }}
      deploy:
        - provider: releases
          api_key:
            secure:
          file:
            - {{ cookiecutter.name }}.framework.zip
          skip_cleanup: true
          overwrite: true
          on:
            repo: {{ cookiecutter.github_name }}/{{ cookiecutter.name }}
            tags: true
        - provider: script
          script: pod trunk push
          on:
            tags: true
